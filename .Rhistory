pivot('launcher')
library(PIVOT)
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
?DT::datatable
library(PIVOT)
pivot('launcher')
source('~/Documents/PIVOT/dev/PIVOT.launcher/R/launcher.R')
pivot('launcher')
library(PIVOT)
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
?JS
library(PIVOT)
pivot('launcher')
pivot('launcher')
source('~/Documents/PIVOT/dev/PIVOT.launcher/R/launcher.R')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
source('R/test2.R')
source('R/test2.R')
source('R/test2.R')
source('R/test2.R')
library(shiny)
mymtcars = mtcars
mymtcars$id = 1:nrow(mtcars)
runApp(
list(ui = pageWithSidebar(
headerPanel('Examples of DataTables'),
sidebarPanel(
checkboxGroupInput('show_vars', 'Columns to show:', names(mymtcars),
selected = names(mymtcars))
,textInput("collection_txt",label="Foo")
),
mainPanel(
dataTableOutput("mytable"),
tags$script(HTML("Shiny.addCustomMessageHandler('unbind-DT', function(id) {
Shiny.unbindAll($('#'+id).find('table').DataTable().table().node());
})"))
)
)
, server = function(input, output, session) {
rowSelect <- reactive({
paste(sort(unique(input[["rows"]])),sep=',')
})
observe({
updateTextInput(session, "collection_txt", value = rowSelect() ,label = "Foo:" )
})
output$mytable = renderDataTable({
addCheckboxButtons <- paste0('<input type="checkbox" name="row', mymtcars$id, '" value="', mymtcars$id, '">',"")
#Display table with checkbox buttons
cbind(Pick=addCheckboxButtons, mymtcars[, input$show_vars, drop=FALSE])
}, options = list(orderClasses = TRUE, lengthMenu = c(5, 25, 50), pageLength = 25)
, callback = DT::JS("function(table) {
table.on('change.dt', 'tr td input:checkbox', function() {
setTimeout(function () {
Shiny.onInputChange('rows', $(this).add('tr td input:checkbox:checked').parent().siblings(':last-child').map(function() {
return $(this).text();
}).get())
}, 10);
});
}"))
session$sendCustomMessage('unbind-DT', 'mytable')
}
)
)
source('R/test2.R')
runApp('R/test2.R')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
runApp('R/test2.R')
library(shiny)
library(DT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
runApp('R/test2.R')
runApp('R/test2.R')
?checkboxInput
library(PIVOT)
runApp('R/test2.R')
runApp('R/test2.R')
runApp('R/test2.R')
runApp('R/test2.R')
runApp('R/test2.R')
runApp('R/test2.R')
runApp('R/test2.R')
source('R/test3.R')
source('R/test3.R')
source('R/test3.R')
source('R/test3.R')
runApp('R/test2.R')
runApp('R/test3.R')
runApp('R/test2.R')
checkboxInput
runApp('R/test2.R')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
Sys.sleep(1);pivot_analysis()
pivot('launcher')
??JS
library(PIVOT)
library(PIVOT)
pivot('launcher')
library(PIVOT)
library(PIVOT)
pivot('launcher')
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
library(PIVOT)
library(PIVOT)
pivot('launcher')
?session$onSessionEnded
library(PIVOT)
pivot('launcher')
library(PIVOT)
pivot('launcher')
?reactiveValuesToList
library(PIVOT)
pivot('launcher')
pivot('launcher')
Sys.sleep(1);pivot_analysis()
pivot('launcher')
Sys.sleep(1);pivot_analysis()
library(PIVOT)
pivot('launcher')
pivot()
Sys.sleep(1);pivot_analysis()
library(PIVOT)
pivot('launcher')
Sys.sleep(1);pivot_analysis()
pivot('launcher')
Sys.sleep(1);pivot_analysis()
Sys.sleep(1);pivot_analysis()
r_module
pivot('launcher')
Sys.sleep(1);pivot_analysis()
pivot('launcher')
Sys.sleep(1);pivot_analysis()
pivot('launcher')
Sys.sleep(1);pivot_analysis()
pivot('launcher')
Sys.sleep(1);pivot_analysis()
PIVOT::pivot('launcher')
library(PIVOT)
PIVOT::pivot('launcher')
library(PIVOT)
PIVOT::pivot('launcher')
Sys.sleep(1);pivot_analysis()
a <- list(1,2,3)
a[1]
a[1,2] <-NA
a[1,2] <-rep(NA,2)
rep(NA,2)
a[[1,2]] <-rep(NA,2)
a <- c(1,2,3)
a[1,2] <-rep(NA,2)
a[c(1,2)] <-rep(NA,2)
a
library(PIVOT)
PIVOT::pivot('launcher')
PIVOT::pivot('launcher')
library(PIVOT)
PIVOT::pivot('launcher')
library(PIVOT)
PIVOT::pivot('launcher')
library(PIVOT)
PIVOT::pivot('launcher')
library(PIVOT)
PIVOT::pivot('launcher')
library(PIVOT)
PIVOT::pivot('launcher')
library(PIVOT)
pivot()
Sys.sleep(1);pivot_analysis()
PIVOT::pivot('launcher')
Sys.sleep(1);pivot_analysis()
library(PIVOT)
library(PIVOT)
PIVOT::pivot('launcher')
library(PIVOT)
PIVOT::pivot('launcher')
Sys.sleep(2);pivot_analysis()
PIVOT::pivot('launcher')
Sys.sleep(2);pivot_analysis()
library(PIVOT)
PIVOT::pivot('launcher')
library(PIVOT)
PIVOT::pivot('launcher')
Sys.sleep(2);pivot_analysis()
library(PIVOT)
pivot()
Sys.sleep(2);pivot_analysis()
library(PIVOT)
library(PIVOT)
pivot()
Sys.sleep(2);pivot_analysis()
PIVOT::pivot('launcher')
Sys.sleep(2);pivot_analysis()
library(PIVOT)
library(PIVOT)
pivot()
pivot('main')
pivot()
pivot('main')
pivot()
pivot('main')
library(PIVOT)
pivot()
Sys.sleep(1);pivot('main')
PIVOT::pivot('launcher')
Sys.sleep(1);pivot('main')
PIVOT::pivot('launcher')
Sys.sleep(1);pivot('main')
PIVOT::pivot('launcher')
Sys.sleep(1);pivot('main')
library(PIVOT)
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
library(PIVOT)
PIVOT::pivot('launcher')
PIVOT::pivot('main')
library(PIVOT)
PIVOT::pivot('launcher')
Sys.sleep(2);PIVOT::pivot('main')
library(PIVOT)
pivot()
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
PIVOT::pivot('launcher')
clean_pivotSession()
pivot()
clean_pivotSession()
pivot()
library(PIVOT)
pivot()
clean_pivotSession()
pivot()
PIVOT::pivot('main')
PIVOT::pivot('launcher')
clean_pivotSession()
pivot()
clean_pivotSession()
pivot()
library(PIVOT)
pivot()
PIVOT::pivot('main')
PIVOT::pivot('launcher')
clean_pivotSession()
pivot()
clean_pivotSession()
pivot()
clean_pivotSession()
pivot()
library(PIVOT)
library(PIVOT)
library(PIVOT)
library(PIVOT)
library(PIVOT)
library(PIVOT)
pivot()
pivot('clean')
pivot()
Sys.sleep(1);PIVOT::pivot('main')
library(PIVOT)
pivot()
PIVOT::pivot('main')
PIVOT::pivot('launcher')
pivot('clean')
pivot()
PIVOT::pivot('main')
library(PIVOT)
library(PIVOT)
library(PIVOT)
pivot()
library(PIVOT)
pivot()
?vapply
library(PIVOT)
pivot()
sapply(cVal, funxion(x){x})
sapply(cVal, funtion(x){x})
sapply(cVal, function(x){x})
cVal = c(T,T,F,F,F)
sapply(cVal, function(x){x})
main_info <- list(
Package = "PIVOT.analysis",
Description = "Main analysis module of PIVOT, including data input and management, DE, clustering, heatmap, dimension reduction, etc. "
#Citation = "Michael I Love, Wolfgang Huber and Simon Anders (2014): Moderated estimation of fold change and dispersion for RNA-Seq data with DESeq2. Genome Biology"
)
deseq_info <- list(
Package = "DESeq2",
Description = "Differential expression based on a model using the negative binomial distribution by Michael I Love, Wolfgang Huber and Simon Anders (2014)."
#Citation = "Michael I Love, Wolfgang Huber and Simon Anders (2014): Moderated estimation of fold change and dispersion for RNA-Seq data with DESeq2. Genome Biology"
)
scde_info <- list(
Package = "scde",
Description = "Single cell differential expression analysis by Kharchenko P and Fan J (2016)."
#Citation = "Kharchenko P and Fan J (2016). scde: Single Cell Differential Expression. R package version 2.2.0, http://pklab.med.harvard.edu/scde."
)
monocle_info <- list(
Package = "monocle",
Description = "Clustering, differential expression, and trajectory analysis for single- cell RNA-Seq by Cole Trapnell and Davide Cacchiarelli et al (2014)."
#Citation = "Cole Trapnell and Davide Cacchiarelli et al (2014): The dynamics and regulators of cell fate decisions are revealed by pseudo-temporal ordering of single cells. Nature Biotechnology."
)
network_info <- list(
Package = "PIVOT.network",
Description = "Visualization of interactome/regulome network and transdifferentiation factor prediction with Mogrify-like method."
#Citation = "Rackham, O. J., Firas, J., Fang, H., Oates, M. E., Holmes, M. L., Knaupp, A. S., ... & Petretto, E. (2016). A predictive computational framework for direct reprogramming between human cell types. Nature genetics."
)
info_tbl <- as.data.frame(rbind(
main_info, deseq_info, scde_info, monocle_info, network_info
))
View(info_tbl)
cVal = c(T,T,F,F,F)
info_tbl$Pick <-sapply(cVal, function(x) {shinyInput(checkboxInput, nrow(info_tbl), 'pick_', label = NULL, value = x, width = '50px')})
cVal = c(T,T,F,F,F)
info_tbl$Pick <-sapply(cVal, function(x) {x})
View(info_tbl)
shinyInput <- function(FUN, len, id, ...) {
inputs <- character(len)
for (i in seq_len(len)) {
inputs[i] <- as.character(FUN(paste0(id, i), ...))
}
inputs
}
cVal = c(T,T,F,F,F)
info_tbl$Pick <-sapply(cVal, function(x) {shinyInput(checkboxInput, nrow(info_tbl), 'pick_', label = NULL, value = x, width = '50px')})
View(info_tbl)
info_tbl$Pick
sapply(cVal, function(x) {shinyInput(checkboxInput, nrow(info_tbl), 'pick_', label = NULL, value = x, width = '50px')})
sapply(cVal, function(x) {shinyInput(checkboxInput, 1, 'pick_', label = NULL, value = x, width = '50px')})
library(PIVOT)
pivot()
library(PIVOT)
pivot()
PIVOT::pivot('main')
PIVOT::pivot('launcher')
PIVOT::pivot('main')
library(PIVOT)
pivot?()
pivot()
pivot('main')
pivot()
pivot('main')
r_module
library(PIVOT)
pivot()
?character
character(1)
character(len = 1)
character(len = c(12,3))
character(len = 4
)
library(PIVOT)
pivot()
library(PIVOT)
pivot()
pivot('main')
pivot('launcher')
pivot('main')
pivot('launcher')
pivot('main')
library(PIVOT)
library(PIVOT)
pivot('launcher')
pivot('main')
pivot('launcher')
pivot('main')
pivot('launcher')
pivot('main')
pivot('launcher')
pivot('main')
pivot('launcher')
pivot('main')
pivot('launcher')
pivot('main')
pivot('launcher')
pivot('main')
pivot('launcher')
pivot('clean')
pivot()
pivot('clean')
pivot()
pivot('clean')
pivot()
library(PIVOT)
pivot()
pivot('main')
library(PIVOT)
pivot()
pivot('main')
pivot()
pivot('main')
pivot()
library(PIVOT)
pivot()
pivot('main')
library(PIVOT)
library(PIVOT)
library(PIVOT)
pivot()
pivot('main')
library(PIVOT)
library(PIVOT)
pivot()
pivot_main()
pivot()
pivot_main()
packList <-rownames(installed.packages())
packList
remove.packages( installed.packages( priority = "NA" )[,1] )
remove.packages( installed.packages( priority = "NA" )[,1] )
packList <-rownames(installed.packages())
packList
remove.packages( installed.packages( priority = "NA" )[,1] )
packList <-rownames(installed.packages())
packList
update.packages(..., checkBuilt=TRUE)
update.packages(checkBuilt=TRUE)
ip <- as.data.frame(installed.packages())
head(ip)
ip <- subset(ip, !grepl("MRO", ip$LibPath))
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
path.lib <- unique(ip$LibPath)
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
packList <-rownames(installed.packages())
packList
.libPaths()
installed.packages( priority = "NA" )[,2]
installed.packages( priority = "NA" )[,1]
installed.packages( priority = "NA" )[,1]
remove.packages( installed.packages( priority = "NA" )[,1] )
?remove.packages
remove.packages( installed.packages( priority = "NA" )[,1], lib = .libPaths()[2] )
.libPaths()[2]
installed.packages( priority = "NA" )[,1]
remove.packages( installed.packages( priority = "NA" )[,1], lib = .libPaths()[2] )
.libPaths()[2]
